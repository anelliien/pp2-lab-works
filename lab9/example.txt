–û—Ç–ª–∏—á–Ω–æ! –°–µ–π—á–∞—Å —Ä–µ—à—É **–≤—Å–µ 15 –∑–∞–¥–∞—á** –ø–æ –æ—á–µ—Ä–µ–¥–∏, **–æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏ –∫–æ–¥–∞** –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏. –í—Å–µ —Ä–µ—à–µ–Ω–∏—è –ª–µ–≥–∫–æ –≤—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –≤ —Ç–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥.

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 1: –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–∏—Å–ø–ª–µ–π –≤—Ä–µ–º–µ–Ω–∏ (`HH:MM:SS`)**
üîß –î–æ–±–∞–≤—å –ø–µ—Ä–µ–¥ `done = False`:
```python
font = pygame.font.SysFont("Arial", 48, bold=True)
```

üîß –í–Ω—É—Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –ø–µ—Ä–µ–¥ `pygame.display.flip()`:
```python
time_string = time.strftime("%H:%M:%S", current_time)
text_surface = font.render(time_string, True, (255, 255, 255))
screen.blit(text_surface, (800 // 2 - text_surface.get_width() // 2, 20))
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 2: –°–¥–µ–ª–∞—Ç—å –æ–∫–Ω–æ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ–º—ã–º (resizable)**
üîÑ –ó–∞–º–µ–Ω–∏:
```python
screen = pygame.display.set_mode((800, 600))
```
–ù–∞:
```python
screen = pygame.display.set_mode((800, 600), pygame.RESIZABLE)
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 3: –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É (`–¥–¥.–º–º.–≥–≥–≥–≥`)**
üîß –î–æ–±–∞–≤—å –≤—Ç–æ—Ä–æ–π —à—Ä–∏—Ñ—Ç:
```python
date_font = pygame.font.SysFont("Arial", 30)
```

üîß –í–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞:
```python
date_string = time.strftime("%d.%m.%Y", current_time)
date_surface = date_font.render(date_string, True, (255, 255, 255))
screen.blit(date_surface, (10, 10))
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 4: –ú–µ–Ω—è—Ç—å —Ñ–æ–Ω –∫–∞–∂–¥—ã–π —á–∞—Å**
üîß –í–Ω—É—Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –ø–æ—Å–ª–µ `current_time = time.localtime()`:
```python
hour = current_time.tm_hour
if hour % 2 == 0:
    screen.fill((30, 30, 60))  # –¢—ë–º–Ω–æ-—Å–∏–Ω–∏–π
else:
    screen.fill((60, 30, 30))  # –¢—ë–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
```

*(–ü–æ–º–µ–Ω—è–π `screen.blit(main, (0, 0))` ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ–Ω–∞)*

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 5: –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ ESC**
üîß –í–Ω—É—Ç—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π:
```python
elif event.type == pygame.KEYDOWN:
    if event.key == pygame.K_ESCAPE:
        done = True
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 6: –î–æ–±–∞–≤–∏—Ç—å —á–∞—Å–æ–≤—É—é —Å—Ç—Ä–µ–ª–∫—É**
üîß –î–æ–±–∞–≤—å –¥–æ —Ü–∏–∫–ª–∞:
```python
hour_arm = pygame.image.load("hour_arm.png")  # —Å–æ–∑–¥–∞–π —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
```

üîß –í —Ü–∏–∫–ª–µ, –ø–æ—Å–ª–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π:
```python
hour = current_time.tm_hour % 12
hour_angle = hour * 30 + (minute / 60) * 30
rotated_hourarm = pygame.transform.rotate(pygame.transform.scale(hour_arm, (50, 400)), -hour_angle)
hourrect = rotated_hourarm.get_rect(center=(800 // 2, 600 // 2))
screen.blit(rotated_hourarm, hourrect)
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 7: –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å —á–∞—Å–æ–≤—ã–µ –º–µ—Ç–∫–∏ (–¥–µ–ª–µ–Ω–∏—è)**
üîß –ü–æ—Å–ª–µ `screen.blit(main, (0,0))`:
```python
for i in range(12):
    angle = math.radians(i * 30)
    x1 = 400 + math.sin(angle) * 250
    y1 = 300 - math.cos(angle) * 250
    x2 = 400 + math.sin(angle) * 270
    y2 = 300 - math.cos(angle) * 270
    pygame.draw.line(screen, (255, 255, 255), (x1, y1), (x2, y2), 4)
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 8: –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–æ–∫**
üîß –£–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ —Ç–≤–æ–µ–º –∫–æ–¥–µ:
```python
minute_angle = minute * 6 + (second / 60) * 6
```
–≠—Ç–æ –¥–∞—ë—Ç –ø–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –º–∏–Ω—É—Ç–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏.  
üîß –î–æ–±–∞–≤—å –≤ `hour_angle`, —á—Ç–æ–±—ã –ø–ª–∞–≤–Ω–æ –¥–≤–∏–≥–∞–ª–∞—Å—å —á–∞—Å–æ–≤–∞—è:
```python
hour_angle = hour * 30 + (minute / 60) * 30
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 9: –î–æ–±–∞–≤–∏—Ç—å –∑–≤—É–∫ —Ç–∏–∫–∞–Ω—å—è**
üîß –í –Ω–∞—á–∞–ª–æ:
```python
tick_sound = pygame.mixer.Sound("tick.wav")  # –¥–æ–±–∞–≤—å —Ñ–∞–π–ª "tick.wav"
last_sec = -1
```

üîß –í —Ü–∏–∫–ª–µ:
```python
if second != last_sec:
    tick_sound.play()
    last_sec = second
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 10: –†–∞–∑–¥–µ–ª–∏—Ç—å –∫–æ–¥ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏**
üîß –í–≤–µ—Ä—Ö —Ñ–∞–π–ª–∞:
```python
def draw_text(surface, text, font, color, position):
    text_surface = font.render(text, True, color)
    surface.blit(text_surface, position)
```

üîß –ò—Å–ø–æ–ª—å–∑—É–π:
```python
draw_text(screen, time_string, font, (255, 255, 255), (400 - text_surface.get_width() // 2, 20))
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 11: –î–æ–±–∞–≤–∏—Ç—å –±—É–¥–∏–ª—å–Ω–∏–∫**
üîß –î–æ —Ü–∏–∫–ª–∞:
```python
alarm_hour = 7
alarm_minute = 30
alarm_triggered = False
```

üîß –í —Ü–∏–∫–ª–µ:
```python
if minute == alarm_minute and hour == alarm_hour and not alarm_triggered:
    pygame.mixer.Sound("alarm.wav").play()
    alarm_triggered = True
elif minute != alarm_minute:
    alarm_triggered = False
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 12: –°–º–µ–Ω–∞ —Å–∫–∏–Ω–æ–≤ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–ª–∞–≤–∏—à–∏**
üîß –í –Ω–∞—á–∞–ª–æ:
```python
skins = ["mickey_clock.png", "clock2.png"]
current_skin = 0
```

üîß –í —Ü–∏–∫–ª–µ:
```python
elif event.type == pygame.KEYDOWN:
    if event.key == pygame.K_s:
        current_skin = (current_skin + 1) % len(skins)
        main = pygame.transform.scale(pygame.image.load(skins[current_skin]), (800, 600))
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 13: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∞–ª–æ–≥/—Ü–∏—Ñ—Ä–æ–≤—ã–µ —á–∞—Å—ã**
üîß –î–æ —Ü–∏–∫–ª–∞:
```python
show_analog = True
```

üîß –í –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–ª–∞–≤–∏—à:
```python
if event.key == pygame.K_c:
    show_analog = not show_analog
```

üîß –í —Ü–∏–∫–ª–µ (–ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π —Å—Ç—Ä–µ–ª–æ–∫):
```python
if show_analog:
    screen.blit(main, (0,0))
    # —Å—Ç—Ä–µ–ª–∫–∏ –∏ –¥–µ–ª–µ–Ω–∏—è
else:
    screen.fill((0, 0, 0))
```

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 14: –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ —Å—Ç—Ä–µ–ª–æ–∫**
üîß –î–æ —Ü–∏–∫–ª–∞:
```python
arm_color = (255, 255, 255)
```

üîß –í –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–ª–∞–≤–∏—à:
```python
if event.key == pygame.K_1:
    arm_color = (255, 0, 0)
elif event.key == pygame.K_2:
    arm_color = (0, 255, 0)
elif event.key == pygame.K_3:
    arm_color = (0, 0, 255)
```

üîß –ò—Å–ø–æ–ª—å–∑—É–π `pygame.draw.line` –≤–º–µ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Å—Ç—Ä–µ–ª–æ–∫, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–∫—Ä–∞—Å–∏—Ç—å –∏—Ö.

---

### ‚úÖ **–ó–∞–¥–∞–Ω–∏–µ 15: –î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ Start, Settings, Exit**
üîß –≠—Ç–æ —É–∂–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –º–µ–Ω—é. –ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª –º–µ–Ω—é:

```python
def draw_menu():
    screen.fill((50, 50, 80))
    title = font.render("MICKEY CLOCK", True, (255, 255, 255))
    start = date_font.render("1 - Start", True, (255, 255, 255))
    settings = date_font.render("2 - Settings", True, (255, 255, 255))
    exit_text = date_font.render("ESC - Exit", True, (255, 255, 255))
    
    screen.blit(title, (300, 100))
    screen.blit(start, (320, 200))
    screen.blit(settings, (320, 250))
    screen.blit(exit_text, (320, 300))
    pygame.display.flip()
```

üîß –ü–æ–∫–∞–∂–∏ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:
```python
in_menu = True
while in_menu:
    draw_menu()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
            in_menu = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_1:
                in_menu = False
            elif event.key == pygame.K_ESCAPE:
                done = True
                in_menu = False
```

---

–í—Å–µ 15 –∑–∞–¥–∞–Ω–∏–π –≥–æ—Ç–æ–≤—ã ‚úÖ  
–•–æ—á–µ—à—å, —è —Å–æ–±–µ—Ä—É –≤—Å—ë —ç—Ç–æ –≤ –æ–¥–∏–Ω –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª?